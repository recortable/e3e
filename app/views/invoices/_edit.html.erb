
<% content_for :header do %>

  <%= javascript_include_tag 'jscharts' %>

  <style>
    #dataset label {width: 10em;}
  </style>

  <script type="text/javascript">
    (function($) {
      var padding = [50, 30, 30, 40];
      var size = [800, 300];
      var columnCount = 18;
      var charts = [];

      $.chart = function(dataset, containerId) {
        var chart = getChart(containerId, dataset);
        repaint(chart, dataset);
      };

      var repaint = function(chart, dataset) {
        var data = getData(dataset);
        chart.setDataArray(data);
        chart.draw();
      };

      var getChart = function(containerId, dataset) {
        if (charts[containerId] == null) {
          charts[containerId] = createChart(containerId);
          addClickHandler(charts[containerId], containerId, dataset);
        }
        return charts[containerId]
      };

      var createChart = function(containerId) {
        var current = new JSChart(containerId, 'bar');;
        current.setTitle("")
        current.setAxisNameX("mes");
        current.setAxisNameY("")
        current.setBarOpacity(0.6);
        current.setSize(size[0], size[1]);
        current.setBarColor("<%= @bar_color %>");
        current.setBarValues(false);
        current.setAxisValuesNumberY(1);
        current.setAxisPaddingTop(padding[0]);
        current.setAxisPaddingRight(padding[1]);
        current.setAxisPaddingBottom(padding[2]);
        current.setAxisPaddingLeft(padding[3]);
        return current;
      };

      var addClickHandler = function(chart, containerId, dataset) {
        var container = $("#" + containerId);
        var offset = container.offset();
        var columnWidth = Math.floor(((size[0] - padding[1] - padding[3]) / columnCount));
        var ndVertical = size[1] - padding[0] - padding[2];
        console.log(columnWidth);
        container.click(function(event) {
          var x = event.pageX - offset.left - padding[3] - 3;
          var y = event.pageY - offset.top - padding[0];
          console.log("XY: " + x + ", " + y);
          var current = (x / columnWidth);
          var column = Math.floor(current);
          console.log("Column: " + column);
          if (column >= 0 && column < columnCount) {
            var currentData = getData(dataset);
            var currentValue = currentData[column];
            var newValue = -1;
            if (y > 0 && y < ndVertical) {
              var maxValue = getMaxValue(currentData);
              var ratio = 1 - (y / ndVertical);
              newValue = maxValue[1] * ratio;
            } else if (y > ndVertical) {
              $("#" + currentValue[0]).val(0);
              repaint(chart, dataset);
            } else if (y < 0) {
              var maxValue = getMaxValue(currentData);
              var perPixel = maxValue[1] / ndVertical;
              var amount = y * perPixel;
              var newValue = maxValue[1] - amount;
            }

            console.log("NewValue: " + newValue);
            if (newValue >= 0) {
              $("#" + currentValue[0]).val(Math.floor(newValue));
              repaint(chart, dataset);
            }
          }
        });
      }

      var getData = function(dataset) {
        var data = new Array();
        $(dataset).find("input.data").each(function() {
          var value = parseInt($(this).val());
          if (isNaN(value) || value == 0) {
            $(this).val('N/D');
            value = 0;
          }
          data.push([$(this).attr('id'), value]);
        });
        return data;
      };

      var getMaxValue = function(data) {
        var max = null;
        $.each(data, function() {
          if (max == null || max[1] < this[1]) {
            max = this;
          }
        });
        return max;
      };

    })(jQuery);

    jQuery(function($) {
      $("#dataset input.data").change(function() {      $.chart('#dataset', 'chart');      });
      $.chart('#dataset', 'chart');
    });

  </script>

<% end %>

<div id="chart_panel">
  <div id="chart">
    Generando gr√°fico...
  </div>
</div>

<% form_tag({:action => 'update'}, :id => 'dataset', :method => 'PUT') do %>
  <p class="save">
    <%= submit_tag t(:submit) %> Pulse "Guardar" cuando complete el cuestionario.
  </p>
  <table class="dataset">
    <% @invoice.months do |consumo, index| %>
      <% fields_for("consumption[]", consumo) do |f| %>
        <tr class="<%= cycle('even', 'odd'); %>">
          <td><%= label_tag consumo.name %></td>
          <td><%= f.text_field  :ammount , :class => 'data', :id => consumo.label %></td>
          <td><span><%= @invoice.units %></span>
            <%= f.hidden_field :id %>
            <%= f.hidden_field :period %>
          </td>
        </tr>
      <% end %>
    <% end %>
  </table>
  <p class="save">
    <%= submit_tag t(:submit) %> Pulse "Guardar" cuando complete el cuestionario.
  </p>
<% end %>

